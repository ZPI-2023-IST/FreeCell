name: Python application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Reformat with Black
      run: black *.py .

    - name: Check for black changes
      id: diff
      run: git diff --exit-code || echo ::set-output name=changes::true

    - name: Commit black changes
      if: steps.diff.outputs.changes == 'true'
      run: |
        git config --local user.email "github@Actions.com"
        git config --local user.name "github-actions[bot]"
        git commit -am "Format code with Black"
        git push origin HEAD:${{ github.head_ref }}

    - name: Lint with Flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest and measure coverage
      run: |
        pytest --cov=. --cov-fail-under=90
        coverage xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Remove existing badges file (if it exists)
      run: rm -rf badges

    - name: Generate coverage badge
      run: |
        pip install coverage-badge
        coverage-badge -o coverage.svg
        mkdir badges
        mv coverage.svg badges/

    - name: Commit files and push changes
      run: |
        git config --local user.email "github@Actions.com"
        git config --local user.name "github-actions[bot]"
        git add badges/coverage.svg
        git commit -m "Add coverage badge"
        git push --force origin HEAD:${{ github.head_ref }}
      continue-on-error: true

    - name: create requirements.txt
      run: |
        pip freeze > requirements.txt

    - name: Commit requirements.txt
      if: steps.diff.outputs.changes == 'true'
      run: |
        git config --local user.email "github@Actions.com"
        git config --local user.name "github-actions[bot]"
        git commit -am "Export requirements.txt"
        git push origin HEAD:${{ github.head_ref }}
